/*
 * This file is generated by jOOQ.
 */
package com.helloxin.tables.records;


import com.helloxin.tables.User;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record7<UInteger, String, String, String, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 402201025;

    /**
     * Setter for <code>zootopia.user.id</code>. 用户自增主键
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>zootopia.user.id</code>. 用户自增主键
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>zootopia.user.user_id</code>. 用户id
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>zootopia.user.user_id</code>. 用户id
     */
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>zootopia.user.user_name</code>. 用户名
     */
    public void setUserName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>zootopia.user.user_name</code>. 用户名
     */
    public String getUserName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>zootopia.user.user_phone</code>. 用户手机号
     */
    public void setUserPhone(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>zootopia.user.user_phone</code>. 用户手机号
     */
    public String getUserPhone() {
        return (String) get(3);
    }

    /**
     * Setter for <code>zootopia.user.password</code>. 用户登录密码
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>zootopia.user.password</code>. 用户登录密码
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>zootopia.user.date_create</code>. 创建时间
     */
    public void setDateCreate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>zootopia.user.date_create</code>. 创建时间
     */
    public Timestamp getDateCreate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>zootopia.user.date_update</code>. 更新时间
     */
    public void setDateUpdate(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>zootopia.user.date_update</code>. 更新时间
     */
    public Timestamp getDateUpdate() {
        return (Timestamp) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UInteger, String, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UInteger, String, String, String, String, Timestamp, Timestamp> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.USER_PHONE;
    }

    @Override
    public Field<String> field5() {
        return User.USER.PASSWORD;
    }

    @Override
    public Field<Timestamp> field6() {
        return User.USER.DATE_CREATE;
    }

    @Override
    public Field<Timestamp> field7() {
        return User.USER.DATE_UPDATE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getUserName();
    }

    @Override
    public String component4() {
        return getUserPhone();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public Timestamp component6() {
        return getDateCreate();
    }

    @Override
    public Timestamp component7() {
        return getDateUpdate();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getUserName();
    }

    @Override
    public String value4() {
        return getUserPhone();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public Timestamp value6() {
        return getDateCreate();
    }

    @Override
    public Timestamp value7() {
        return getDateUpdate();
    }

    @Override
    public UserRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setUserPhone(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserRecord value6(Timestamp value) {
        setDateCreate(value);
        return this;
    }

    @Override
    public UserRecord value7(Timestamp value) {
        setDateUpdate(value);
        return this;
    }

    @Override
    public UserRecord values(UInteger value1, String value2, String value3, String value4, String value5, Timestamp value6, Timestamp value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(UInteger id, String userId, String userName, String userPhone, String password, Timestamp dateCreate, Timestamp dateUpdate) {
        super(User.USER);

        set(0, id);
        set(1, userId);
        set(2, userName);
        set(3, userPhone);
        set(4, password);
        set(5, dateCreate);
        set(6, dateUpdate);
    }
}
